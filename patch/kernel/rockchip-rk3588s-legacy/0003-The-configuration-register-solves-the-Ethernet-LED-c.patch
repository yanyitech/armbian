From b6b06b020b64e8c79d4a6eac435fe8e17b1269b0 Mon Sep 17 00:00:00 2001
From: george <george@cool-pi.com>
Date: Fri, 13 Jan 2023 09:24:41 +0800
Subject: [PATCH 1/3] The configuration register solves the Ethernet LED
 configuration problem

---
 drivers/net/ethernet/realtek/r8168/r8168_n.c | 55 ++++++++++++++++++++
 1 file changed, 55 insertions(+)
 mode change 100644 => 100755 drivers/net/ethernet/realtek/r8168/r8168_n.c

diff --git a/drivers/net/ethernet/realtek/r8168/r8168_n.c b/drivers/net/ethernet/realtek/r8168/r8168_n.c
old mode 100644
new mode 100755
index 84c4d0970..191d3cb88
--- a/drivers/net/ethernet/realtek/r8168/r8168_n.c
+++ b/drivers/net/ethernet/realtek/r8168/r8168_n.c
@@ -687,6 +687,48 @@ static inline void eth_hw_addr_random(struct net_device *dev)
 }
 #endif
 
+static unsigned char phyaddr[12] = {0};
+
+#include <linux/ctype.h>
+
+#ifndef MODULE
+static int __init rtlmac_cmdline_opt(char *str)
+{ 
+	char *opt;
+	char *p = NULL;
+	int i = 0;
+	int j = 0;
+	int len = 0;
+	unsigned char temp;
+
+	if (!str || !*str)
+		return -EINVAL;
+
+	while ((opt = strsep(&str, ",")) != NULL) {
+		if (!strncmp(opt, "ethaddr:", 8)) {
+			len = strlen(opt+8);
+			if(len > 17)
+				len = 17;
+			p = opt + 8;
+			for(i = 0; i< len; i++) {
+				temp = tolower(p[i]);
+				if(temp == ':')
+					continue;
+				if(temp > '9')
+					phyaddr[j] = temp - 'a' + 10;
+				else 
+					phyaddr[j] = temp - 0x30;
+				j++;
+			}
+		}
+	}
+
+	return 0;
+}
+
+__setup("rtleth=", rtlmac_cmdline_opt);
+#endif /* MODULE */
+
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,0)
 #undef ethtool_ops
 #define ethtool_ops _kc_ethtool_ops
@@ -24060,6 +24102,7 @@ rtl8168_get_mac_address(struct net_device *dev)
 {
         struct rtl8168_private *tp = netdev_priv(dev);
         int i;
+        int j;
         u8 mac_addr[MAC_ADDR_LEN];
 
         for (i = 0; i < MAC_ADDR_LEN; i++)
@@ -24116,6 +24159,12 @@ rtl8168_get_mac_address(struct net_device *dev)
                 }
         }
 
+        j = 0;
+        for (i = 0; i < MAC_ADDR_LEN; i++) {
+                mac_addr[i] = (phyaddr[j] << 4) | phyaddr[j+1];
+                j += 2;
+        }
+
         if (!is_valid_ether_addr(mac_addr)) {
                 netif_err(tp, probe, dev, "Invalid ether addr %pM\n",
                           mac_addr);
@@ -25491,6 +25540,7 @@ rtl8168_init_one(struct pci_dev *pdev,
         static int board_idx = -1;
 
         int rc;
+        int value;
 
         assert(pdev != NULL);
         assert(ent != NULL);
@@ -25652,6 +25702,11 @@ rtl8168_init_one(struct pci_dev *pdev,
 
         rtl8168_disable_rxdvgate(dev);
 
+        value = RTL_R8(tp, 0x18);
+        value = RTL_R8(tp, 0x19);
+        RTL_W8(tp, 0x18,0x70);
+        RTL_W8(tp, 0x19,0x08);
+
         device_set_wakeup_enable(&pdev->dev, tp->wol_enabled);
 
         netif_carrier_off(dev);
-- 
2.34.1

